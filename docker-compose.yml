version: '3.7'

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.2
    restart: always
    ports:
      - 9200:9200
      - 9300:9300 
    volumes:
      - ./apps/elk-stack/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
    networks:
      - robo-chef
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: 'changeme'
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    
  kibana:
    image: docker.elastic.co/kibana/kibana:8.4.2
    restart: always
    ports:
      - 5601:5601 
    volumes:
      - ./apps/elk-stack/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    environment:
      KIBANA_SYSTEM_PASSWORD: 'changeme'
    networks:
      - robo-chef
    depends_on:
      - elasticsearch

  api:
    container_name: api
    build:
      context: ./
      cache_from:
        - my-base-image:nx-base
      dockerfile: ./apps/api/Dockerfile
      args:
        NODE_ENV: "development"
        BUILD_FLAG: ""
    image: api:nx-dev
    ports:
      - 3333:3333
    environment:
      NODE_ENV: "development"
      PORT: 3333
      WAIT_BEFORE_HOSTS: 20
      WAIT_HOSTS: elasticsearch:9200
      WAIT_HOSTS_TIMEOUT: 60
      WAIT_SLEEP_INTERVAL: 30
      WAIT_HOST_CONNECT_TIMEOUT: 30
    networks:
      - robo-chef
    restart: on-failure
    depends_on:
      - elasticsearch
    command: sh -c "/wait && node ./dist/apps/api/main.js"

  web:
    container_name: web
    build:
      context: ./
      cache_from:
        - my-base-image:nx-base
      dockerfile: ./apps/web/Dockerfile
      args:
        NODE_ENV: "production"
        BUILD_FLAG: ""
        GRAPHQL_ENDPOINT: "http://localhost:3333/graphql"
    image: web:nx-dev
    ports:
      - 4200:4200
    environment:
      NODE_ENV: "production"
      PORT: 4200
      GRAPHQL_ENDPOINT: "http://localhost:3333/graphql"
    networks:
      - robo-chef
    restart: on-failure
    depends_on:
      - api

networks:
  robo-chef:
    driver: bridge

volumes:
  setup:
  elasticsearch:
  portainer_data: